{
  "name": "Desafio 2 copy",
  "nodes": [
    {
      "parameters": {},
      "id": "60bed498-c0b7-498b-9f28-ab6b98cb025e",
      "name": "When clicking 'Test Workflow' button",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        120,
        340
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b5e557f4-dfb7-4a61-b0b3-c8ef2ae44079",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        100,
        -440
      ],
      "webhookId": "d312f9f2-f8bb-452a-a584-bf71380dcb8b",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "url": "https://drive.usercontent.google.com/u/0/uc?id=1jaNl2kL-a32HO_jXH3g3J1mGHzHWm9YD&export=download",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        560,
        340
      ],
      "id": "2c01e0ad-595c-40dd-b0c9-a2e8fbe64324",
      "name": "HTTP Request"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.compression",
      "typeVersion": 1.1,
      "position": [
        780,
        340
      ],
      "id": "63f5fbbb-16c2-46a2-abc2-3a21f04f048e",
      "name": "Compression"
    },
    {
      "parameters": {
        "binaryPropertyName": "file_0",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        980,
        200
      ],
      "id": "204648fb-63fb-44a5-8912-6fa3d9b83e37",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "binaryPropertyName": "file_1",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        980,
        420
      ],
      "id": "09d32742-9f20-4802-80a0-45286cbaa6d1",
      "name": "Extract from File1"
    },
    {
      "parameters": {
        "mode": "combine",
        "fieldsToMatchString": "['CHAVE DE ACESSO']",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1240,
        340
      ],
      "id": "b42f0d6e-16d0-489c-b3b9-32b501bd39b1",
      "name": "Merge"
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "value": "notas_fiscais",
          "mode": "name"
        },
        "dataMode": "defineBelow",
        "valuesToSend": {
          "values": [
            {
              "column": "chave_acesso",
              "value": "= {{ $json['CHAVE DE ACESSO'] }}"
            },
            {
              "column": "modelo",
              "value": "= {{ $json['MODELO'] }}"
            },
            {
              "column": "serie",
              "value": "={{ $json['SÉRIE'] }}"
            },
            {
              "column": "numero",
              "value": "={{ $json['NÚMERO'] }}"
            },
            {
              "column": "natureza_operacao",
              "value": "={{ $json['NATUREZA DA OPERAÇÃO'] }}"
            },
            {
              "column": "data_emissao",
              "value": "={{ $json['DATA EMISSÃO'] }}"
            },
            {
              "column": "evento_mais_recente",
              "value": "={{ $json['EVENTO MAIS RECENTE'] }}"
            },
            {
              "column": "data_evento_mais_recente",
              "value": "={{ $json['DATA/HORA EVENTO MAIS RECENTE'] }}"
            },
            {
              "column": "cpf_cnpj_emitente",
              "value": "={{ $json['CPF/CNPJ Emitente'] }}"
            },
            {
              "column": "razao_social_emitente",
              "value": "={{ $json['RAZÃO SOCIAL EMITENTE'] }}"
            },
            {
              "column": "inscricao_estadual_emitente",
              "value": "={{ $json['INSCRIÇÃO ESTADUAL EMITENTE'] }}"
            },
            {
              "column": "uf_emitente",
              "value": "={{ $json['UF EMITENTE'] }}"
            },
            {
              "column": "municipio_emitente",
              "value": "={{ $json['MUNICÍPIO EMITENTE'] }}"
            },
            {
              "column": "cnpj_destinatario",
              "value": "={{ $json['CNPJ DESTINATÁRIO'] }}"
            },
            {
              "column": "nome_destinatario",
              "value": "={{ $json['NOME DESTINATÁRIO'] }}"
            },
            {
              "column": "uf_destinatario",
              "value": "={{ $json['UF DESTINATÁRIO'] }}"
            },
            {
              "column": "indicador_ie_destinatario",
              "value": "={{ $json['INDICADOR IE DESTINATÁRIO'] }}"
            },
            {
              "column": "destino_operacao",
              "value": "={{ $json['DESTINO DA OPERAÇÃO'] }}"
            },
            {
              "column": "consumidor_final",
              "value": "={{ $json['CONSUMIDOR FINAL'] }}"
            },
            {
              "column": "presenca_comprador",
              "value": "={{ $json['PRESENÇA DO COMPRADOR'] }}"
            },
            {
              "column": "valor_nota_fiscal",
              "value": "={{ $json['VALOR NOTA FISCAL'] }}"
            },
            {
              "column": "numero_produto",
              "value": "={{ $json['NÚMERO PRODUTO'] }}"
            },
            {
              "column": "descricao_produto_servico",
              "value": "={{ $json['DESCRIÇÃO DO PRODUTO/SERVIÇO'] }}"
            },
            {
              "column": "codigo_ncm",
              "value": "={{ $json['CÓDIGO NCM/SH'] }}"
            },
            {
              "column": "tipo_produto",
              "value": "={{ $json['NCM/SH (TIPO DE PRODUTO)'] }}"
            },
            {
              "column": "cfop",
              "value": "={{ $json['CFOP'] }}"
            },
            {
              "column": "quantidade",
              "value": "={{ $json['QUANTIDADE'] }}"
            },
            {
              "column": "unidade",
              "value": "={{ $json['UNIDADE'] }}"
            },
            {
              "column": "valor_unitario",
              "value": "={{ $json['VALOR UNITÁRIO'] }}"
            },
            {
              "column": "valor_total",
              "value": "={{ $json['VALOR TOTAL'] }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        1460,
        340
      ],
      "id": "aec7cd40-a3f8-4d12-ba5e-b603ce92b187",
      "name": "MySQL",
      "credentials": {
        "mySql": {
          "id": "NNxiq6GpJfftaEav",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteTable",
        "table": {
          "__rl": true,
          "value": "notas_fiscais",
          "mode": "list",
          "cachedResultName": "notas_fiscais"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        340,
        340
      ],
      "id": "d96df819-535e-4b43-a997-9b2bf837917d",
      "name": "MySQL1",
      "credentials": {
        "mySql": {
          "id": "NNxiq6GpJfftaEav",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "{{ $json.output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        740,
        -440
      ],
      "id": "23528544-b8e3-43ec-bfff-b8729ea55e45",
      "name": "MySQL2",
      "alwaysOutputData": false,
      "credentials": {
        "mySql": {
          "id": "NNxiq6GpJfftaEav",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        980,
        -440
      ],
      "id": "92f84e0f-6773-4f49-8b33-487672fd7f28",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.5-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        360,
        -220
      ],
      "id": "e66b4ce2-ebae-4be2-840c-1936cd86c121",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "cSvYIbJujFNMSjSc",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.5-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1300,
        -220
      ],
      "id": "a1f4b5b5-454a-4d77-99c7-a847a11c4820",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "cSvYIbJujFNMSjSc",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Você é um agente de resposta SQL que recebe:\n\n1. A **pergunta original** feita em português pelo usuário cujo conteúdo é: {{ $('When chat message received').item.json.chatInput }}\n2. O **resultado da consulta SQL** executada em uma base MySQL, no qual o resultado em json puro é: {{ $json.toJsonString() }} **Caso o json conter mais de um item, sumarizar antes para gerar resposta completa**\n\nSua tarefa é **apenas apresentar a resposta de forma clara, objetiva e técnica**, sem explicar o raciocínio ou incluir comentários. Muito menos incluir a pergunta ou o resultado puro. Trate o resultado para ser amigável e claro.\n\nSiga estas regras:\n\n- Sempre responda em **português**.\n- Seja **direto** e **preciso**.\n- Se o resultado for um número (ex: soma, contagem, média), informe esse valor com unidade se aplicável.\n- Se o resultado for uma lista (ex: nomes, UFs, produtos), formate como **tabela clara e ordenada** se forem poucos dados, ou como **lista separada por vírgulas** se for longo.\n- Use **linguagem técnica** adequada ao contexto (ex: valor faturado, quantidade emitida, municípios, CFOPs, etc.).\n- Não repita a pergunta do usuário.\n- Se não houver resultados, responda: `\"Nenhum resultado encontrado para os critérios informados.\"`\n\n### Exemplos:\n\n**Input**:  \nPergunta: Qual o valor total das notas fiscais emitidas em janeiro de 2024?  \nResultado SQL: `total_janeiro_2024 = 123456.78`\n\n**Resposta**:  \nO valor total das notas fiscais emitidas em janeiro de 2024 foi de R$ 123.456,78.\n\n---\n\n**Input**:  \nPergunta: Quais foram os estados que mais emitiram notas em 2023?  \nResultado SQL:  \n| uf_emitente | total_notas |\n|-------------|-------------|\n| SP          | 1520        |\n| RJ          | 980         |\n| MG          | 760         |\n\n**Resposta**:  \nOs estados com maior número de notas emitidas em 2023 foram:  \n- SP: 1.520 notas  \n- RJ: 980 notas  \n- MG: 760 notas\n\n---\n\n**Input**:  \nPergunta: Quantos produtos diferentes foram comercializados?  \nResultado SQL vazio.\n\n**Resposta**:  \nNenhum resultado encontrado para os critérios informados. ",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1300,
        -440
      ],
      "id": "091ee05f-e1ae-4a2e-9ee1-34b7cc35268c",
      "name": "Basic LLM Chain1"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=Você é um assistente SQL especializado em MySQL. Sua função é converter perguntas feitas em **português natural** em consultas SQL **corretas, seguras e eficientes**, usando apenas uma tabela chamada `notas_fiscais`.\n\nEssa tabela contém os seguintes campos:\n\n- id (INT, chave primária, auto incremento)\n- chave_acesso (TEXT)\n- modelo (TEXT)\n- serie (TEXT)\n- numero (TEXT)\n- natureza_operacao (TEXT)\n- data_emissao (DATE)\n- cpf_cnpj_emitente (TEXT)\n- razao_social_emitente (TEXT)\n- inscricao_estadual_emitente (TEXT)\n- uf_emitente (TEXT)\n- municipio_emitente (TEXT)\n- cnpj_destinatario (TEXT)\n- nome_destinatario (TEXT)\n- uf_destinatario (TEXT)\n- indicador_ie_destinatario (TEXT)\n- destino_operacao (TEXT)\n- consumidor_final (TEXT)\n- presenca_comprador (TEXT)\n- numero_produto (TEXT)\n- descricao_produto_servico (TEXT)\n- codigo_ncm (TEXT)\n- tipo_produto (TEXT)\n- cfop (TEXT)\n- quantidade (DECIMAL)\n- unidade (TEXT)\n- valor_unitario (DECIMAL)\n- valor_total (DECIMAL)\n- evento_mais_recente (TEXT)\n- data_evento_mais_recente (DATETIME)\n- valor_nota_fiscal (DECIMAL)\n\n### Regras que você deve seguir:\n\n1. Use sempre **nomes de colunas exatos** conforme definidos acima.\n2. Se a pergunta contiver palavras como \"faturamento\", \"total\", \"valor\", \"nota fiscal\", utilize `SUM(valor_nota_fiscal)` ou `SUM(valor_total)` conforme contexto.\n3. Para datas, use a coluna `data_emissao` ou `data_evento_mais_recente` dependendo da intenção.\n4. Sempre use `WHERE`, `GROUP BY`, `ORDER BY`, `LIMIT` de forma otimizada.\n5. Nunca use `SELECT *` — sempre selecione apenas os campos necessários.\n6. Se a pergunta mencionar um mês ou ano (ex: janeiro de 2024), converta corretamente para filtro por data.\n7. Se a pergunta pedir agrupamentos (por UF, por modelo, etc.), use `GROUP BY`.\n8. Nunca invente campos ou tabelas — só use a tabela `notas_fiscais`.\n9. Retorne apenas a consulta SQL **pura** no output. **NÃO COLOQUE NENHUM CARACTERE ANTES OU DEPOIS**\n\n### Exemplos de Entrada e Saída:\n\n**Pergunta**: Qual o valor total das notas fiscais emitidas em janeiro de 2024?\n\n**Resposta**: SELECT SUM(valor_nota_fiscal) AS total_janeiro_2024\nFROM notas_fiscais\nWHERE data_emissao BETWEEN '2024-01-01' AND '2024-01-31';\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        340,
        -440
      ],
      "id": "79fc9a65-b690-4b5e-b5ff-97c8ef3c8476",
      "name": "AI Agent"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        520,
        -220
      ],
      "id": "845975a4-357c-4ab4-bce0-18b65b3acbb1",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "content": "**Memória**\n\nMemória para o agente poder responder perguntas baseadas nas anteriores\n\n"
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        640,
        -220
      ],
      "id": "db2327ae-f840-4e98-9322-e7cfab5eb9fc",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "** Unir resultados **\nSem essa opção, se a query retornasse 5 linhas, seriam processados 5 itens na LLM, sem co-relação entre si"
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        900,
        -620
      ],
      "id": "e5468c37-4abd-47c5-aabb-4aa29bfdd2dc",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "** Limpar tabela **\nSempre importante fazer a limpeza antes de carregar os dados",
        "height": 140,
        "width": 180
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        300,
        500
      ],
      "id": "01a7fd0a-db3a-4699-b17e-e099bb1a7c00",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "** Busca o zip **\nRealiza download do zip direto pelo link disponibilizado",
        "height": 140,
        "width": 160
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        540,
        500
      ],
      "id": "497f30b3-7a7a-4af4-9a1f-7815c3987f3d",
      "name": "Sticky Note3"
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking 'Test Workflow' button": {
      "main": [
        [
          {
            "node": "MySQL1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Compression",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compression": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          },
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "MySQL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MySQL1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MySQL2": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "MySQL2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "callerPolicy": "workflowsFromSameOwner",
    "executionOrder": "v0"
  },
  "versionId": "521b7c07-f8c4-4447-bef9-d7e4a037030e",
  "meta": {
    "templateId": "1960",
    "templateCredsSetupCompleted": true,
    "instanceId": "6ad24b096b931044598f9efea4d2dc07353deb2dda0478fcbe5568e70d9f3211"
  },
  "id": "nPq5lL35gO04Pqbq",
  "tags": []
}